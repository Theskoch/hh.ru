#!/usr/bin/env python3

import time

def preg():

	time_start = time.time()

	mass=['1','2','3','4','5','6']
	mass1=[]
	le=6
	for i in range(le):
		g=mass[i]

		for p in range(le):
			g=g[0]+str(mass[p])

			for a in range(le):
				g=g[0:2]+str(mass[a])

				for k in range(le):
					g=g[0:3]+str(mass[k])

					for k in range(le):
						g=g[0:4]+str(mass[k])

						for k in range(le):
							g=g[0:5]+str(mass[k])

							t = True

							for n in range(le):
								for x in range(le):
									if x!=n:
										if g[n]==g[x]:
											t=False


							if t == True:
								mass1.append(g)
	time_fin = time.time()
					

	time_sr = time_fin - time_start
	print('], ['.join(mass1))
	print("yebat "+str(len(mass1)))
	print(str(time_start)+'     time_start')
	print(str(time_fin)+'     time_fin')
	print(str(time_sr)+'     srednee')

	return mass1

# preg()



def sort_left_rite(limitation_string_one_left = 1,limitation_string_one_right = 3 ):

	mass_string_one_left_test = []
	mass_string_one_right_test = []

	mass = [[1,2,3,4,5,6], [1,2,3,4,6,5], [1,2,3,5,4,6], [1,2,3,5,6,4], [1,2,3,6,4,5], [1,2,3,6,5,4], [1,2,4,3,5,6], [1,2,4,3,6,5], [1,2,4,5,3,6], [1,2,4,5,6,3], 
			[1,2,4,6,3,5], [1,2,4,6,5,3], [1,2,5,3,4,6], [1,2,5,3,6,4],	[1,2,5,4,3,6], [1,2,5,4,6,3], [1,2,5,6,3,4], [1,2,5,6,4,3], [1,2,6,3,4,5], [1,2,6,3,5,4], 
			[1,2,6,4,3,5], [1,2,6,4,5,3], [1,2,6,5,3,4], [1,2,6,5,4,3], [1,3,2,4,5,6], [1,3,2,4,6,5], [1,3,2,5,4,6], [1,3,2,5,6,4],	[1,3,2,6,4,5], [1,3,2,6,5,4], 
			[1,3,4,2,5,6], [1,3,4,2,6,5], [1,3,4,5,2,6], [1,3,4,5,6,2], [1,3,4,6,2,5], [1,3,4,6,5,2], [1,3,5,2,4,6], [1,3,5,2,6,4], [1,3,5,4,2,6], [1,3,5,4,6,2],
			[1,3,5,6,2,4], [1,3,5,6,4,2], [1,3,6,2,4,5], [1,3,6,2,5,4], [1,3,6,4,2,5], [1,3,6,4,5,2], [1,3,6,5,2,4], [1,3,6,5,4,2], [1,4,2,3,5,6], [1,4,2,3,6,5], 
			[1,4,2,5,3,6], [1,4,2,5,6,3], [1,4,2,6,3,5], [1,4,2,6,5,3], [1,4,3,2,5,6], [1,4,3,2,6,5], [1,4,3,5,2,6], [1,4,3,5,6,2], [1,4,3,6,2,5], [1,4,3,6,5,2], 
			[1,4,5,2,3,6], [1,4,5,2,6,3], [1,4,5,3,2,6], [1,4,5,3,6,2], [1,4,5,6,2,3], [1,4,5,6,3,2], [1,4,6,2,3,5], [1,4,6,2,5,3], [1,4,6,3,2,5], [1,4,6,3,5,2], 
			[1,4,6,5,2,3], [1,4,6,5,3,2], [1,5,2,3,4,6], [1,5,2,3,6,4], [1,5,2,4,3,6], [1,5,2,4,6,3], [1,5,2,6,3,4], [1,5,2,6,4,3], [1,5,3,2,4,6], [1,5,3,2,6,4],
			[1,5,3,4,2,6], [1,5,3,4,6,2], [1,5,3,6,2,4], [1,5,3,6,4,2], [1,5,4,2,3,6], [1,5,4,2,6,3], [1,5,4,3,2,6], [1,5,4,3,6,2], [1,5,4,6,2,3], [1,5,4,6,3,2], 
			[1,5,6,2,3,4], [1,5,6,2,4,3], [1,5,6,3,2,4], [1,5,6,3,4,2], [1,5,6,4,2,3], [1,5,6,4,3,2], [1,6,2,3,4,5], [1,6,2,3,5,4], [1,6,2,4,3,5], [1,6,2,4,5,3], 
			[1,6,2,5,3,4], [1,6,2,5,4,3], [1,6,3,2,4,5], [1,6,3,2,5,4], [1,6,3,4,2,5], [1,6,3,4,5,2], [1,6,3,5,2,4], [1,6,3,5,4,2], [1,6,4,2,3,5], [1,6,4,2,5,3], 
			[1,6,4,3,2,5], [1,6,4,3,5,2], [1,6,4,5,2,3], [1,6,4,5,3,2], [1,6,5,2,3,4], [1,6,5,2,4,3], [1,6,5,3,2,4], [1,6,5,3,4,2], [1,6,5,4,2,3], [1,6,5,4,3,2], 
			[2,1,3,4,5,6], [2,1,3,4,6,5], [2,1,3,5,4,6], [2,1,3,5,6,4], [2,1,3,6,4,5], [2,1,3,6,5,4], [2,1,4,3,5,6], [2,1,4,3,6,5], [2,1,4,5,3,6], [2,1,4,5,6,3], 
			[2,1,4,6,3,5], [2,1,4,6,5,3], [2,1,5,3,4,6], [2,1,5,3,6,4], [2,1,5,4,3,6], [2,1,5,4,6,3], [2,1,5,6,3,4], [2,1,5,6,4,3], [2,1,6,3,4,5], [2,1,6,3,5,4], 
			[2,1,6,4,3,5], [2,1,6,4,5,3], [2,1,6,5,3,4], [2,1,6,5,4,3], [2,3,1,4,5,6], [2,3,1,4,6,5], [2,3,1,5,4,6], [2,3,1,5,6,4], [2,3,1,6,4,5], [2,3,1,6,5,4], 
			[2,3,4,1,5,6], [2,3,4,1,6,5], [2,3,4,5,1,6], [2,3,4,5,6,1], [2,3,4,6,1,5], [2,3,4,6,5,1], [2,3,5,1,4,6], [2,3,5,1,6,4], [2,3,5,4,1,6], [2,3,5,4,6,1], 
			[2,3,5,6,1,4], [2,3,5,6,4,1], [2,3,6,1,4,5], [2,3,6,1,5,4], [2,3,6,4,1,5], [2,3,6,4,5,1], [2,3,6,5,1,4], [2,3,6,5,4,1], [2,4,1,3,5,6], [2,4,1,3,6,5], 
			[2,4,1,5,3,6], [2,4,1,5,6,3], [2,4,1,6,3,5], [2,4,1,6,5,3], [2,4,3,1,5,6], [2,4,3,1,6,5], [2,4,3,5,1,6], [2,4,3,5,6,1], [2,4,3,6,1,5], [2,4,3,6,5,1], 
			[2,4,5,1,3,6], [2,4,5,1,6,3], [2,4,5,3,1,6], [2,4,5,3,6,1], [2,4,5,6,1,3], [2,4,5,6,3,1], [2,4,6,1,3,5], [2,4,6,1,5,3], [2,4,6,3,1,5], [2,4,6,3,5,1], 
			[2,4,6,5,1,3], [2,4,6,5,3,1], [2,5,1,3,4,6], [2,5,1,3,6,4], [2,5,1,4,3,6], [2,5,1,4,6,3], [2,5,1,6,3,4], [2,5,1,6,4,3], [2,5,3,1,4,6], [2,5,3,1,6,4], 
			[2,5,3,4,1,6], [2,5,3,4,6,1], [2,5,3,6,1,4], [2,5,3,6,4,1], [2,5,4,1,3,6], [2,5,4,1,6,3], [2,5,4,3,1,6], [2,5,4,3,6,1], [2,5,4,6,1,3], [2,5,4,6,3,1], 
			[2,5,6,1,3,4], [2,5,6,1,4,3], [2,5,6,3,1,4], [2,5,6,3,4,1], [2,5,6,4,1,3], [2,5,6,4,3,1], [2,6,1,3,4,5], [2,6,1,3,5,4], [2,6,1,4,3,5], [2,6,1,4,5,3],
			[2,6,1,5,3,4], [2,6,1,5,4,3], [2,6,3,1,4,5], [2,6,3,1,5,4], [2,6,3,4,1,5], [2,6,3,4,5,1], [2,6,3,5,1,4], [2,6,3,5,4,1], [2,6,4,1,3,5], [2,6,4,1,5,3], 
			[2,6,4,3,1,5], [2,6,4,3,5,1], [2,6,4,5,1,3], [2,6,4,5,3,1], [2,6,5,1,3,4], [2,6,5,1,4,3], [2,6,5,3,1,4], [2,6,5,3,4,1], [2,6,5,4,1,3], [2,6,5,4,3,1], 
			[3,1,2,4,5,6], [3,1,2,4,6,5], [3,1,2,5,4,6], [3,1,2,5,6,4], [3,1,2,6,4,5], [3,1,2,6,5,4], [3,1,4,2,5,6], [3,1,4,2,6,5], [3,1,4,5,2,6], [3,1,4,5,6,2], 
			[3,1,4,6,2,5], [3,1,4,6,5,2], [3,1,5,2,4,6], [3,1,5,2,6,4], [3,1,5,4,2,6], [3,1,5,4,6,2], [3,1,5,6,2,4], [3,1,5,6,4,2], [3,1,6,2,4,5], [3,1,6,2,5,4], 
			[3,1,6,4,2,5], [3,1,6,4,5,2], [3,1,6,5,2,4], [3,1,6,5,4,2], [3,2,1,4,5,6], [3,2,1,4,6,5], [3,2,1,5,4,6], [3,2,1,5,6,4], [3,2,1,6,4,5], [3,2,1,6,5,4], 
			[3,2,4,1,5,6], [3,2,4,1,6,5], [3,2,4,5,1,6], [3,2,4,5,6,1], [3,2,4,6,1,5], [3,2,4,6,5,1], [3,2,5,1,4,6], [3,2,5,1,6,4], [3,2,5,4,1,6], [3,2,5,4,6,1], 
			[3,2,5,6,1,4], [3,2,5,6,4,1], [3,2,6,1,4,5], [3,2,6,1,5,4], [3,2,6,4,1,5], [3,2,6,4,5,1], [3,2,6,5,1,4], [3,2,6,5,4,1], [3,4,1,2,5,6], [3,4,1,2,6,5], 
			[3,4,1,5,2,6], [3,4,1,5,6,2], [3,4,1,6,2,5], [3,4,1,6,5,2], [3,4,2,1,5,6], [3,4,2,1,6,5], [3,4,2,5,1,6], [3,4,2,5,6,1], [3,4,2,6,1,5], [3,4,2,6,5,1], 
			[3,4,5,1,2,6], [3,4,5,1,6,2], [3,4,5,2,1,6], [3,4,5,2,6,1], [3,4,5,6,1,2], [3,4,5,6,2,1], [3,4,6,1,2,5], [3,4,6,1,5,2], [3,4,6,2,1,5], [3,4,6,2,5,1], 
			[3,4,6,5,1,2], [3,4,6,5,2,1], [3,5,1,2,4,6], [3,5,1,2,6,4], [3,5,1,4,2,6], [3,5,1,4,6,2], [3,5,1,6,2,4], [3,5,1,6,4,2], [3,5,2,1,4,6], [3,5,2,1,6,4], 
			[3,5,2,4,1,6], [3,5,2,4,6,1], [3,5,2,6,1,4], [3,5,2,6,4,1], [3,5,4,1,2,6], [3,5,4,1,6,2], [3,5,4,2,1,6], [3,5,4,2,6,1], [3,5,4,6,1,2], [3,5,4,6,2,1], 
			[3,5,6,1,2,4], [3,5,6,1,4,2], [3,5,6,2,1,4], [3,5,6,2,4,1], [3,5,6,4,1,2], [3,5,6,4,2,1], [3,6,1,2,4,5], [3,6,1,2,5,4], [3,6,1,4,2,5], [3,6,1,4,5,2], 
			[3,6,1,5,2,4], [3,6,1,5,4,2], [3,6,2,1,4,5], [3,6,2,1,5,4], [3,6,2,4,1,5], [3,6,2,4,5,1], [3,6,2,5,1,4], [3,6,2,5,4,1], [3,6,4,1,2,5], [3,6,4,1,5,2], 
			[3,6,4,2,1,5], [3,6,4,2,5,1], [3,6,4,5,1,2], [3,6,4,5,2,1], [3,6,5,1,2,4], [3,6,5,1,4,2], [3,6,5,2,1,4], [3,6,5,2,4,1], [3,6,5,4,1,2], [3,6,5,4,2,1], 
			[4,1,2,3,5,6], [4,1,2,3,6,5], [4,1,2,5,3,6], [4,1,2,5,6,3], [4,1,2,6,3,5], [4,1,2,6,5,3], [4,1,3,2,5,6], [4,1,3,2,6,5], [4,1,3,5,2,6], [4,1,3,5,6,2], 
			[4,1,3,6,2,5], [4,1,3,6,5,2], [4,1,5,2,3,6], [4,1,5,2,6,3], [4,1,5,3,2,6], [4,1,5,3,6,2], [4,1,5,6,2,3], [4,1,5,6,3,2], [4,1,6,2,3,5], [4,1,6,2,5,3], 
			[4,1,6,3,2,5], [4,1,6,3,5,2], [4,1,6,5,2,3], [4,1,6,5,3,2], [4,2,1,3,5,6], [4,2,1,3,6,5], [4,2,1,5,3,6], [4,2,1,5,6,3], [4,2,1,6,3,5], [4,2,1,6,5,3], 
			[4,2,3,1,5,6], [4,2,3,1,6,5], [4,2,3,5,1,6], [4,2,3,5,6,1], [4,2,3,6,1,5], [4,2,3,6,5,1], [4,2,5,1,3,6], [4,2,5,1,6,3], [4,2,5,3,1,6], [4,2,5,3,6,1], 
			[4,2,5,6,1,3], [4,2,5,6,3,1], [4,2,6,1,3,5], [4,2,6,1,5,3], [4,2,6,3,1,5], [4,2,6,3,5,1], [4,2,6,5,1,3], [4,2,6,5,3,1], [4,3,1,2,5,6], [4,3,1,2,6,5], 
			[4,3,1,5,2,6], [4,3,1,5,6,2], [4,3,1,6,2,5], [4,3,1,6,5,2], [4,3,2,1,5,6], [4,3,2,1,6,5], [4,3,2,5,1,6], [4,3,2,5,6,1], [4,3,2,6,1,5], [4,3,2,6,5,1], 
			[4,3,5,1,2,6], [4,3,5,1,6,2], [4,3,5,2,1,6], [4,3,5,2,6,1], [4,3,5,6,1,2], [4,3,5,6,2,1], [4,3,6,1,2,5], [4,3,6,1,5,2], [4,3,6,2,1,5], [4,3,6,2,5,1], 
			[4,3,6,5,1,2], [4,3,6,5,2,1], [4,5,1,2,3,6], [4,5,1,2,6,3], [4,5,1,3,2,6], [4,5,1,3,6,2], [4,5,1,6,2,3], [4,5,1,6,3,2], [4,5,2,1,3,6], [4,5,2,1,6,3], 
			[4,5,2,3,1,6], [4,5,2,3,6,1], [4,5,2,6,1,3], [4,5,2,6,3,1], [4,5,3,1,2,6], [4,5,3,1,6,2], [4,5,3,2,1,6], [4,5,3,2,6,1], [4,5,3,6,1,2], [4,5,3,6,2,1], 
			[4,5,6,1,2,3], [4,5,6,1,3,2], [4,5,6,2,1,3], [4,5,6,2,3,1], [4,5,6,3,1,2], [4,5,6,3,2,1], [4,6,1,2,3,5], [4,6,1,2,5,3], [4,6,1,3,2,5], [4,6,1,3,5,2], 
			[4,6,1,5,2,3], [4,6,1,5,3,2], [4,6,2,1,3,5], [4,6,2,1,5,3], [4,6,2,3,1,5], [4,6,2,3,5,1], [4,6,2,5,1,3], [4,6,2,5,3,1], [4,6,3,1,2,5], [4,6,3,1,5,2], 
			[4,6,3,2,1,5], [4,6,3,2,5,1], [4,6,3,5,1,2], [4,6,3,5,2,1], [4,6,5,1,2,3], [4,6,5,1,3,2], [4,6,5,2,1,3], [4,6,5,2,3,1], [4,6,5,3,1,2], [4,6,5,3,2,1], 
			[5,1,2,3,4,6], [5,1,2,3,6,4], [5,1,2,4,3,6], [5,1,2,4,6,3], [5,1,2,6,3,4], [5,1,2,6,4,3], [5,1,3,2,4,6], [5,1,3,2,6,4], [5,1,3,4,2,6], [5,1,3,4,6,2], 
			[5,1,3,6,2,4], [5,1,3,6,4,2], [5,1,4,2,3,6], [5,1,4,2,6,3], [5,1,4,3,2,6], [5,1,4,3,6,2], [5,1,4,6,2,3], [5,1,4,6,3,2], [5,1,6,2,3,4], [5,1,6,2,4,3], 
			[5,1,6,3,2,4], [5,1,6,3,4,2], [5,1,6,4,2,3], [5,1,6,4,3,2], [5,2,1,3,4,6], [5,2,1,3,6,4], [5,2,1,4,3,6], [5,2,1,4,6,3], [5,2,1,6,3,4], [5,2,1,6,4,3], 
			[5,2,3,1,4,6], [5,2,3,1,6,4], [5,2,3,4,1,6], [5,2,3,4,6,1], [5,2,3,6,1,4], [5,2,3,6,4,1], [5,2,4,1,3,6], [5,2,4,1,6,3], [5,2,4,3,1,6], [5,2,4,3,6,1], 
			[5,2,4,6,1,3], [5,2,4,6,3,1], [5,2,6,1,3,4], [5,2,6,1,4,3], [5,2,6,3,1,4], [5,2,6,3,4,1], [5,2,6,4,1,3], [5,2,6,4,3,1], [5,3,1,2,4,6], [5,3,1,2,6,4], 
			[5,3,1,4,2,6], [5,3,1,4,6,2], [5,3,1,6,2,4], [5,3,1,6,4,2], [5,3,2,1,4,6], [5,3,2,1,6,4], [5,3,2,4,1,6], [5,3,2,4,6,1], [5,3,2,6,1,4], [5,3,2,6,4,1], 
			[5,3,4,1,2,6], [5,3,4,1,6,2], [5,3,4,2,1,6], [5,3,4,2,6,1], [5,3,4,6,1,2], [5,3,4,6,2,1], [5,3,6,1,2,4], [5,3,6,1,4,2], [5,3,6,2,1,4], [5,3,6,2,4,1], 
			[5,3,6,4,1,2], [5,3,6,4,2,1], [5,4,1,2,3,6], [5,4,1,2,6,3], [5,4,1,3,2,6], [5,4,1,3,6,2], [5,4,1,6,2,3], [5,4,1,6,3,2], [5,4,2,1,3,6], [5,4,2,1,6,3], 
			[5,4,2,3,1,6], [5,4,2,3,6,1], [5,4,2,6,1,3], [5,4,2,6,3,1], [5,4,3,1,2,6], [5,4,3,1,6,2], [5,4,3,2,1,6], [5,4,3,2,6,1], [5,4,3,6,1,2], [5,4,3,6,2,1], 
			[5,4,6,1,2,3], [5,4,6,1,3,2], [5,4,6,2,1,3], [5,4,6,2,3,1], [5,4,6,3,1,2], [5,4,6,3,2,1], [5,6,1,2,3,4], [5,6,1,2,4,3], [5,6,1,3,2,4], [5,6,1,3,4,2], 
			[5,6,1,4,2,3], [5,6,1,4,3,2], [5,6,2,1,3,4], [5,6,2,1,4,3], [5,6,2,3,1,4], [5,6,2,3,4,1], [5,6,2,4,1,3], [5,6,2,4,3,1], [5,6,3,1,2,4], [5,6,3,1,4,2], 
			[5,6,3,2,1,4], [5,6,3,2,4,1], [5,6,3,4,1,2], [5,6,3,4,2,1], [5,6,4,1,2,3], [5,6,4,1,3,2], [5,6,4,2,1,3], [5,6,4,2,3,1], [5,6,4,3,1,2], [5,6,4,3,2,1], 
			[6,1,2,3,4,5], [6,1,2,3,5,4], [6,1,2,4,3,5], [6,1,2,4,5,3], [6,1,2,5,3,4], [6,1,2,5,4,3], [6,1,3,2,4,5], [6,1,3,2,5,4], [6,1,3,4,2,5], [6,1,3,4,5,2], 
			[6,1,3,5,2,4], [6,1,3,5,4,2], [6,1,4,2,3,5], [6,1,4,2,5,3], [6,1,4,3,2,5], [6,1,4,3,5,2], [6,1,4,5,2,3], [6,1,4,5,3,2], [6,1,5,2,3,4], [6,1,5,2,4,3], 
			[6,1,5,3,2,4], [6,1,5,3,4,2], [6,1,5,4,2,3], [6,1,5,4,3,2], [6,2,1,3,4,5], [6,2,1,3,5,4], [6,2,1,4,3,5], [6,2,1,4,5,3], [6,2,1,5,3,4], [6,2,1,5,4,3], 
			[6,2,3,1,4,5], [6,2,3,1,5,4], [6,2,3,4,1,5], [6,2,3,4,5,1], [6,2,3,5,1,4], [6,2,3,5,4,1], [6,2,4,1,3,5], [6,2,4,1,5,3], [6,2,4,3,1,5], [6,2,4,3,5,1], 
			[6,2,4,5,1,3], [6,2,4,5,3,1], [6,2,5,1,3,4], [6,2,5,1,4,3], [6,2,5,3,1,4], [6,2,5,3,4,1], [6,2,5,4,1,3], [6,2,5,4,3,1], [6,3,1,2,4,5], [6,3,1,2,5,4], 
			[6,3,1,4,2,5], [6,3,1,4,5,2], [6,3,1,5,2,4], [6,3,1,5,4,2], [6,3,2,1,4,5], [6,3,2,1,5,4], [6,3,2,4,1,5], [6,3,2,4,5,1], [6,3,2,5,1,4], [6,3,2,5,4,1], 
			[6,3,4,1,2,5], [6,3,4,1,5,2], [6,3,4,2,1,5], [6,3,4,2,5,1], [6,3,4,5,1,2], [6,3,4,5,2,1], [6,3,5,1,2,4], [6,3,5,1,4,2], [6,3,5,2,1,4], [6,3,5,2,4,1], 
			[6,3,5,4,1,2], [6,3,5,4,2,1], [6,4,1,2,3,5], [6,4,1,2,5,3], [6,4,1,3,2,5], [6,4,1,3,5,2], [6,4,1,5,2,3], [6,4,1,5,3,2], [6,4,2,1,3,5], [6,4,2,1,5,3], 
			[6,4,2,3,1,5], [6,4,2,3,5,1], [6,4,2,5,1,3], [6,4,2,5,3,1], [6,4,3,1,2,5], [6,4,3,1,5,2], [6,4,3,2,1,5], [6,4,3,2,5,1], [6,4,3,5,1,2], [6,4,3,5,2,1], 
			[6,4,5,1,2,3], [6,4,5,1,3,2], [6,4,5,2,1,3], [6,4,5,2,3,1], [6,4,5,3,1,2], [6,4,5,3,2,1], [6,5,1,2,3,4], [6,5,1,2,4,3], [6,5,1,3,2,4], [6,5,1,3,4,2], 
			[6,5,1,4,2,3], [6,5,1,4,3,2], [6,5,2,1,3,4], [6,5,2,1,4,3], [6,5,2,3,1,4], [6,5,2,3,4,1], [6,5,2,4,1,3], [6,5,2,4,3,1], [6,5,3,1,2,4], [6,5,3,1,4,2], 
			[6,5,3,2,1,4], [6,5,3,2,4,1], [6,5,3,4,1,2], [6,5,3,4,2,1], [6,5,4,1,2,3], [6,5,4,1,3,2], [6,5,4,2,1,3], [6,5,4,2,3,1], [6,5,4,3,1,2], [6,5,4,3,2,1]]
	
	for h in mass:

		l = 0
		g = int (0)

		for i in h:
			# print(i)
			if i > g:
				l+=1
				g=i

		#print(l)

		if limitation_string_one_left == l:
			mass_string_one_left_test.append(h)

		#print(mass_string_one_left_test)

	for h in mass_string_one_left_test:

		l = 0
		g = int (0)

		for i in reversed(h):

			if i > g:
				l += 1
				g = i
		#print (l)

		if limitation_string_one_right == l:
			mass_string_one_right_test.append(h)

		#print(mass_string_one_right_test)


	return mass_string_one_right_test

def one():


	mass_line_one = sort_left_rite(3,1)
	mass_line_two = sort_left_rite(3,1)
	mass_line_three = sort_left_rite(3,1)

	mass_line_four = sort_left_rite(3,1)
	mass_line_five = sort_left_rite(3,1)
	mass_line_six = sort_left_rite(3,1)

	print(mass_line_one)
	# print(mass_line_two)
	# print(mass_line_three)

	# print(mass_line_four)
	# print(mass_line_five)
	# print(mass_line_six)


time_start = time.time()

one()

time_fin = time.time()
					
time_sr = time_fin - time_start

print(str(time_start)+'     time_start')
print(str(time_fin)+'     time_fin')
print(str(time_sr)+'     srednee')